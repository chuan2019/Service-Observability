[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastapi-prometheus-metrics"
version = "1.0.0"
description = "FastAPI application with Prometheus metrics integration"
readme = "README.md"
requires-python = ">=3.8.1"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
]
dependencies = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "prometheus-client>=0.19.0",
    "pydantic[email]>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-multipart>=0.0.6",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "aiosqlite>=0.19.0",
    "httpx>=0.25.0",
    "flake8>=7.1.2",
    "aiohttp>=3.10.11",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "pytest-cov>=4.0.0",
    "aiohttp>=3.9.0",
]
monitoring = [
    "psutil>=5.9.0",
    "redis>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/fastapi-prometheus-metrics"
Documentation = "https://github.com/yourusername/fastapi-prometheus-metrics#readme"
Repository = "https://github.com/yourusername/fastapi-prometheus-metrics.git"
Issues = "https://github.com/yourusername/fastapi-prometheus-metrics/issues"

[project.scripts]
metrics-app = "app.main:app"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
known_first_party = ["app"]

[tool.flake8]
max-line-length = 120

[tool.pytest.ini_options]
flake8-max-line-length = 120
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
